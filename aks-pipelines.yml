# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- develop
- feature/*
- master

pool:
  name: 'mypool'

variables:
  buildConfiguration: 'Release'
  dotNetFramework: 'net6.0'
  repository: 'bermtechACR'
  namespace: 'walmartdev'
  k8sconnection: 'kubewalmartdev'
  imagePullSecret: 'test'

stages:
- stage: 'Build'
  jobs:
  - job: 'Build'
    steps:
      - task: Docker@2
        inputs:
          containerRegistry: 'ACRDocker'
          repository: '$(repository)'
          command: 'buildAndPush'
          Dockerfile: '**/Dockerfile'
          tags: |
            latest
            $(Build.BuildNumber)
      - task: PublishPipelineArtifact@1
        inputs:
          artifactName: 'manifests'
          path: 'manifests'

- stage: 'Deploy'
  displayName: 'Deployment to Dev'
  jobs:
  - deployment: Deploy
    displayName: Deploy to AKS
    pool:
      name: 'mypool'   
    environment: 'Dev'
    strategy:
      runOnce:
        deploy:
          steps:
           - task: DownloadPipelineArtifact@2
             displayName: 'Download Manifests'
             inputs:
                artifactName: 'manifests'
                downloadPath: '$(System.ArtifactsDirectory)/manifests'

           - task: KubernetesManifest@0
             displayName: Create imagePullSecret
             inputs:
                kubernetesServiceConnection: $(k8sconnection)
                action: createSecret
                secretName: $(imagePullSecret)
                namespace: $(namespace)
                dockerRegistryEndpoint: 'ACRDocker'
              
           - task: KubernetesManifest@0
             displayName: Deploy
             inputs:
              kubernetesServiceConnection: $(k8sconnection)
              action: deploy
              namespace: $(namespace)
              manifests: |
                $(System.ArtifactsDirectory)/manifests/deployment.yaml
                $(System.ArtifactsDirectory)/manifests/Service.yaml
                $(System.ArtifactsDirectory)/manifests/Ingress.yaml
              imagePullSecrets: |
                $(imagePullSecret)
              arguments: '-n=walmartdev'